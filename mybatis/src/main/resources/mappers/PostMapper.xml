<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.alfa.repositories.mybatis.PostMapper">
    
    <resultMap id="PostResultMap" type="Post">
        <id property="id" column="post_id"/>
        <id property="writerId" column="member_id"/>
        <id property="nickname" column="nickname"/>
        <id property="title" column="title"/>
        <id property="content" column="content"/>
        <id property="viewCount" column="view_count"/>
        <id property="noticeYn" column="notice_yn"/>
        <id property="createdDate" column="created_date"/>
        <id property="lastModifiedDate" column="last_modified_date"/>
        <id property="deleteYn" column="delete_yn"/>
        <collection property="commentIds" ofType="java.lang.Long" column="comment_id"/>
        <collection property="attachmentIds" ofType="java.lang.Long" column="post_attachment_id"/>
    </resultMap>
    
    <insert id="save" useGeneratedKeys="true" keyColumn="post_id" keyProperty="id">
        INSERT INTO tbl_posts(member_id, title, content, notice_yn)
        VALUES (#{writerId}, #{title}, #{content}, #{noticeYn});
    </insert>
    
    <select id="findById" resultMap="PostResultMap">
        SELECT post.*,
               member.nickname                             AS nickname,
               GROUP_CONCAT(comment.comment_id)            AS commentIds,
               GROUP_CONCAT(attachment.post_attachment_id) AS attachmentIds
        FROM tbl_posts AS post
                 JOIN tbl_members AS member ON post.member_id = member.member_id
                 LEFT JOIN tbl_comments AS comment ON post.post_id = comment.post_id
                 LEFT JOIN tbl_post_attachments AS attachment ON post.post_id = attachment.post_id
        WHERE post.post_id = #{id}
        GROUP BY post.post_id;
    </select>
    
    <select id="findByIdAndDeleteYn" resultMap="PostResultMap">
        SELECT post.*,
               member.nickname                             AS nickname,
               GROUP_CONCAT(comment.comment_id)            AS commentIds,
               GROUP_CONCAT(attachment.post_attachment_id) AS attachmentIds
        FROM tbl_posts AS post
                 JOIN tbl_members AS member ON post.member_id = member.member_id AND member.delete_yn = #{deleteYn}
                 LEFT JOIN tbl_comments AS comment ON post.post_id = comment.post_id AND comment.delete_yn = #{deleteYn}
                 LEFT JOIN tbl_post_attachments AS attachment
                           ON post.post_id = attachment.post_id AND attachment.delete_yn = #{deleteYn}
        WHERE post.post_id = #{id}
          AND post.delete_yn = #{deleteYn}
        GROUP BY post.post_id;
    </select>
    
    <select id="findAll" resultMap="PostResultMap">
        SELECT post.*,
               member.nickname                             AS nickname,
               GROUP_CONCAT(comment.comment_id)            AS commentIds,
               GROUP_CONCAT(attachment.post_attachment_id) AS attachmentIds
        FROM tbl_posts AS post
                 JOIN tbl_members AS member ON post.member_id = member.member_id
                 LEFT JOIN tbl_comments AS comment ON post.post_id = comment.post_id
                 LEFT JOIN tbl_post_attachments AS attachment ON post.post_id = attachment.post_id
        GROUP BY post.post_id;
    </select>
    
    <select id="findAllByDeleteYn" resultMap="PostResultMap">
        SELECT post.*,
               member.nickname                             AS nickname,
               GROUP_CONCAT(comment.comment_id)            AS commentIds,
               GROUP_CONCAT(attachment.post_attachment_id) AS attachmentIds
        FROM tbl_posts AS post
                 JOIN tbl_members AS member ON post.member_id = member.member_id AND member.delete_yn = #{deleteYn}
                 LEFT JOIN tbl_comments AS comment ON post.post_id = comment.post_id AND comment.delete_yn = #{deleteYn}
                 LEFT JOIN tbl_post_attachments AS attachment
                           ON post.post_id = attachment.post_id AND attachment.delete_yn = #{deleteYn}
        WHERE post.delete_yn = #{deleteYn}
        GROUP BY post.post_id;
    </select>
    
    <select id="findAllByIds" resultMap="PostResultMap">
        SELECT post.*, member.nickname AS nickname, GROUP_CONCAT(comment.comment_id) AS commentIds,
        GROUP_CONCAT(attachment.post_attachment_id) AS attachmentIds
        FROM tbl_posts AS post
        JOIN tbl_members AS member ON post.member_id = member.member_id
        LEFT JOIN tbl_comments AS comment ON post.post_id = comment.post_id
        LEFT JOIN tbl_post_attachments AS attachment ON post.post_id = attachment.post_id
        WHERE post.post_id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        GROUP BY post.post_id;
    </select>
    
    <select id="findAllByIdsAndDeleteYn" resultMap="PostResultMap">
        SELECT post.*, member.nickname AS nickname, GROUP_CONCAT(comment.comment_id) AS commentIds,
        GROUP_CONCAT(attachment.post_attachment_id) AS attachmentIds
        FROM tbl_posts AS post
        JOIN tbl_members AS member ON post.member_id = member.member_id AND member.delete_yn = #{deleteYn}
        LEFT JOIN tbl_comments AS comment ON post.post_id = comment.post_id AND comment.delete_yn = #{deleteYn}
        LEFT JOIN tbl_post_attachments AS attachment ON post.post_id = attachment.post_id
        AND attachment.delete_yn = #{deleteYn}
        WHERE post.post_id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        AND post.delete_yn = #{deleteYn}
        GROUP BY post.post_id;
    </select>
    
    <select id="findAllByWriter" resultMap="PostResultMap">
        SELECT post.*,
               member.nickname                             AS nickname,
               GROUP_CONCAT(comment.comment_id)            AS commentIds,
               GROUP_CONCAT(attachment.post_attachment_id) AS attachmentIds
        FROM tbl_posts AS post
                 JOIN tbl_members AS member ON post.member_id = member.member_id
                 LEFT JOIN tbl_comments AS comment ON post.post_id = comment.post_id
                 LEFT JOIN tbl_post_attachments AS attachment ON post.post_id = attachment.post_id
        WHERE post.member_id = #{writerId}
        GROUP BY post.post_id;
    </select>
    
    <select id="findAllByWriterAndDeleteYn" resultMap="PostResultMap">
        SELECT post.*,
               member.nickname                             AS nickname,
               GROUP_CONCAT(comment.comment_id)            AS commentIds,
               GROUP_CONCAT(attachment.post_attachment_id) AS attachmentIds
        FROM tbl_posts AS post
                 JOIN tbl_members AS member ON post.member_id = member.member_id AND member.delete_yn = #{deleteYn}
                 LEFT JOIN tbl_comments AS comment ON post.post_id = comment.post_id AND comment.delete_yn = #{deleteYn}
                 LEFT JOIN tbl_post_attachments AS attachment
                           ON post.post_id = attachment.post_id AND attachment.delete_yn = #{deleteYn}
        WHERE post.member_id = #{writerId}
          AND post.delete_yn = #{deleteYn}
        GROUP BY post.post_id;
    </select>
    
    <select id="findAllBySearchParam" resultMap="PostResultMap">
        SELECT post.*, member.nickname AS nickname, GROUP_CONCAT(comment.comment_id) AS commentIds,
        GROUP_CONCAT(attachment.post_attachment_id) AS attachmentIds
        FROM tbl_posts AS post
        JOIN tbl_members AS member ON post.member_id = member.member_id
        LEFT JOIN tbl_comments AS comment ON post.post_id = comment.post_id
        LEFT JOIN tbl_post_attachments AS attachment ON post.post_id = attachment.post_id
        <where>
            <foreach collection="keywords" item="keyword" separator="or">
                <if test="searchCondition == 'title'">
                    post.title LIKE CONCAT('%', #{keyword}, '%')
                </if>
                <if test="searchCondition == 'content'">
                    post.content LIKE CONCAT('%', #{keyword}, '%')
                </if>
                <if test="searchCondition == 'titleOrContent'">
                    (post.title LIKE CONCAT('%', #{keyword}, '%') OR post.content LIKE CONCAT('%', #{keyword}, '%'))
                </if>
                <if test="searchCondition == 'writer'">
                    member.nickname LIKE CONCAT('%', #{keyword}, '%')
                </if>
                <if test="searchCondition.trim() == '' or searchCondition == null">
                    (post.title LIKE CONCAT('%', #{keyword}, '%') OR post.content LIKE CONCAT('%', #{keyword}, '%') OR
                    member.nickname LIKE CONCAT('%', #{keyword}, '%'))
                </if>
            </foreach>
        </where>
        GROUP BY post.post_id;
    </select>
    
    <select id="findAllBySearchParamAndDeleteYn" resultMap="PostResultMap">
        SELECT post.*, member.nickname AS nickname, GROUP_CONCAT(comment.comment_id) AS commentIds,
        GROUP_CONCAT(attachment.post_attachment_id) AS attachmentIds
        FROM tbl_posts AS post
        JOIN tbl_members AS member ON post.member_id = member.member_id AND member.delete_yn = #{deleteYn}
        LEFT JOIN tbl_comments AS comment ON post.post_id = comment.post_id AND comment.delete_yn = #{deleteYn}
        LEFT JOIN tbl_post_attachments AS attachment ON post.post_id = attachment.post_id
        AND attachment.delete_yn = #{deleteYn}
        WHERE post.delete_yn = #{deleteYn}
        <if test="!param.keywords.isEmpty()">
            AND (
            <foreach collection="param.keywords" item="keyword" separator="or">
                <choose>
                    <when test="param.searchCondition == 'title'">
                        post.title LIKE CONCAT('%', #{keyword}, '%')
                    </when>
                    <when test="param.searchCondition == 'content'">
                        post.content LIKE CONCAT('%', #{keyword}, '%')
                    </when>
                    <when test="param.searchCondition == 'titleOrContent'">
                        (post.title LIKE CONCAT('%', #{keyword}, '%') OR post.content LIKE CONCAT('%', #{keyword}, '%'))
                    </when>
                    <when test="param.searchCondition == 'writer'">
                        member.nickname LIKE CONCAT('%', #{keyword}, '%')
                    </when>
                    <otherwise>
                        (post.title LIKE CONCAT('%', #{keyword}, '%') OR post.content LIKE CONCAT('%', #{keyword}, '%')
                        OR
                        member.nickname LIKE CONCAT('%', #{keyword}, '%'))
                    </otherwise>
                </choose>
            </foreach>
            )
        </if>
        GROUP BY post.post_id;
    </select>
    
    <update id="addViewCount">
        UPDATE tbl_posts
        SET view_count = view_count + 1
        WHERE post_id = #{id}
          AND delete_yn = 0;
    </update>
    
    <update id="update">
        UPDATE tbl_posts
        <set>
            <if test="title != null and title.trim() != ''">
                title = #{title},
            </if>
            <if test="content != null and content.trim() != ''">
                content = #{content},
            </if>
            <if test="noticeYn != null">
                notice_yn = #{noticeYn},
            </if>
            <if test="(title != null and title.trim() != '') or content != null or noticeYn != null">
                last_modified_date = CURRENT_TIMESTAMP
            </if>
        </set>
        WHERE post_id = #{id}
        AND member_id = #{writerId}
        AND delete_yn = 0;
    </update>
    
    <select id="existsById" resultType="Boolean">
        SELECT EXISTS(SELECT 1 FROM tbl_posts WHERE post_id = #{id});
    </select>
    
    <select id="existsByIdAndDeleteYn" resultType="Boolean">
        SELECT EXISTS(SELECT 1 FROM tbl_posts WHERE post_id = #{id} AND delete_yn = #{deleteYn});
    </select>
    
    <update id="deleteById">
        UPDATE tbl_posts
        SET delete_yn = 1
        WHERE post_id = #{id}
          AND member_id = #{writerId}
          AND delete_yn = 0;
    </update>
    
    <delete id="permanentlyDeleteById">
        DELETE
        FROM tbl_posts
        WHERE post_id = #{id}
          AND delete_yn = 1;
    </delete>
    
    <update id="deleteAllByIds">
        UPDATE tbl_posts
        SET delete_yn = 1
        WHERE post_id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        AND member_id = #{writerId}
        AND delete_yn = 0;
    </update>
    
    <delete id="permanentlyDeleteAllByIds">
        DELETE
        FROM tbl_posts
        WHERE post_id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        AND delete_yn = 1;
    </delete>

</mapper>